{"version":3,"sources":["../../../src/core/messages.ts"],"sourcesContent":["export const authMessages = {\n\tsuccess: {\n\t\tregistration: \"Registration successful. Welcome!\",\n\t\tlogin: \"Login successful. Welcome back!\",\n\t\tlogout: \"Logout successful. See you again!\",\n\t\tpasswordReset: \"Password reset successful. You can now log in with your new password.\",\n\t\temailVerification: \"Email verification successful. Your account is now active.\",\n\t\taccountVerification: \"Account verification successful. Your account is active.\",\n\t\tpasswordChange: \"Password change successful. Your password has been updated.\",\n\t\ttokenRefresh: \"Token refresh successful. You are still logged in.\",\n\t\ttokenValid: \"Token is valid. You are authenticated.\",\n\t\tauthorizationGranted: \"Access granted. You have the necessary permissions.\",\n\t\temailVerificationSent: \"Email verification sent. Please check your inbox.\",\n\t\tsessionUpdated: \"Session updated. You are still logged in.\"\n\t},\n\terror: {\n\t\tregistration: {\n\t\t\temailInUse: \"Registration failed. The email is already in use.\",\n\t\t\tweakPassword: \"Registration failed. The password is too weak.\",\n\t\t\tinvalidEmail: \"Registration failed. The email address is invalid.\",\n\t\t\tmissingFields: \"Registration failed. Please fill in all required fields.\",\n\t\t\tserverError: \"Registration failed. Server error occurred.\"\n\t\t},\n\t\tlogin: {\n\t\t\tinvalidCredentials: \"Login failed. Invalid email or password.\",\n\t\t\taccountLocked: \"Login failed. Your account is locked.\",\n\t\t\taccountNotVerified: \"Login failed. Please verify your email address.\",\n\t\t\tmissingFields: \"Login failed. Please provide both email and password.\",\n\t\t\tserverError: \"Login failed. Server error occurred.\",\n\t\t\ttwoFactorRequired: \"Login failed. Two-factor authentication is required.\",\n\t\t\ttwoFactorFailed: \"Login failed. Two-factor authentication failed.\",\n\t\t\tsessionExpired: \"Login failed. Your session has expired.\"\n\t\t},\n\t\tlogout: {\n\t\t\tnotLoggedIn: \"Logout failed. You are not logged in.\",\n\t\t\tserverError: \"Logout failed. Server error occurred.\"\n\t\t},\n\t\tpasswordReset: {\n\t\t\tinvalidToken: \"Password reset failed. The reset token is invalid or expired.\",\n\t\t\tuserNotFound: \"Password reset failed. No user found with this email address.\",\n\t\t\tweakPassword: \"Password reset failed. The new password is too weak.\",\n\t\t\tserverError: \"Password reset failed. Server error occurred.\"\n\t\t},\n\t\temailVerification: {\n\t\t\tinvalidToken: \"Email verification failed. The verification token is invalid or expired.\",\n\t\t\talreadyVerified: \"Email verification failed. The email is already verified.\",\n\t\t\tserverError: \"Email verification failed. Server error occurred.\"\n\t\t},\n\t\tpasswordChange: {\n\t\t\tincorrectPassword: \"Password change failed. The current password is incorrect.\",\n\t\t\tweakNewPassword: \"Password change failed. The new password is too weak.\",\n\t\t\tserverError: \"Password change failed. Server error occurred.\"\n\t\t},\n\t\ttokenRefresh: {\n\t\t\tinvalidToken: \"Token refresh failed. The refresh token is invalid or expired.\",\n\t\t\tserverError: \"Token refresh failed. Server error occurred.\"\n\t\t},\n\t\tauthorization: {\n\t\t\tinsufficientRole: \"Access denied. You do not have the necessary role.\",\n\t\t\tinsufficientRoles: \"Access denied. You do not have the necessary roles.\",\n\t\t\tinsufficientPermissions: \"Access denied. You do not have the necessary permissions.\",\n\t\t\tsessionExpired: \"Access denied. Your session has expired.\",\n\t\t\tnotAuthenticated: \"Access denied. You are not authenticated.\",\n\t\t\tserverError: \"Access denied. Server error occurred.\"\n\t\t}\n\t}\n};\n\nexport const crudMessages = {\n\tsuccess: {\n\t\tcreate: (item: string) => `${item} created successfully.`,\n\t\tread: (item: string) => `${item} retrieved successfully.`,\n\t\tupdate: (item: string) => `${item} updated successfully.`,\n\t\tdelete: (item: string) => `${item} deleted successfully.`\n\t},\n\terror: {\n\t\tcreate: {\n\t\t\tvalidationError: (item: string) => `Creation of ${item} failed. Validation error occurred.`,\n\t\t\talreadyExists: (item: string) => `Creation of ${item} failed. ${item} already exists.`,\n\t\t\tmissingFields: (item: string) => `Creation of ${item} failed. Missing required fields.`,\n\t\t\tserverError: (item: string) => `Creation of ${item} failed. Server error occurred.`,\n\t\t\tduplicateEntry: (item: string) => `Creation of ${item} failed. Duplicate entry detected.`,\n\t\t\tinvalidData: (item: string) => `Creation of ${item} failed. Invalid data provided.`,\n\t\t\tquotaExceeded: (item: string) => `Creation of ${item} failed. Quota exceeded.`\n\t\t},\n\t\tread: {\n\t\t\tnotFound: (item: string) => `Retrieval of ${item} failed. ${item} not found.`,\n\t\t\tunauthorized: (item: string) =>\n\t\t\t\t`Retrieval of ${item} failed. You do not have the necessary permissions.`,\n\t\t\tserverError: (item: string) => `Retrieval of ${item} failed. Server error occurred.`,\n\t\t\tnoData: (item: string) => `Retrieval of ${item} failed. No data available.`,\n\t\t\tforbidden: (item: string) => `Retrieval of ${item} failed. Forbidden access.`,\n\t\t\ttimeout: (item: string) => `Retrieval of ${item} failed. Operation timed out.`\n\t\t},\n\t\tupdate: {\n\t\t\tnotFound: (item: string) => `Update of ${item} failed. ${item} not found.`,\n\t\t\tvalidationError: (item: string) => `Update of ${item} failed. Validation error occurred.`,\n\t\t\tmissingFields: (item: string) => `Update of ${item} failed. Missing required fields.`,\n\t\t\tserverError: (item: string) => `Update of ${item} failed. Server error occurred.`,\n\t\t\tconflict: (item: string) => `Update of ${item} failed. Conflict with existing data.`,\n\t\t\tunauthorized: (item: string) => `Update of ${item} failed. Unauthorized access.`,\n\t\t\tnoChanges: (item: string) => `Update of ${item} failed. No changes detected.`,\n\t\t\tlocked: (item: string) => `Update of ${item} failed. The item is locked.`\n\t\t},\n\t\tdelete: {\n\t\t\tnotFound: (item: string) => `Deletion of ${item} failed. ${item} not found.`,\n\t\t\tunauthorized: (item: string) =>\n\t\t\t\t`Deletion of ${item} failed. You do not have the necessary permissions.`,\n\t\t\tserverError: (item: string) => `Deletion of ${item} failed. Server error occurred.`,\n\t\t\tconflict: (item: string) => `Deletion of ${item} failed. Conflict with related data.`,\n\t\t\tprotected: (item: string) => `Deletion of ${item} failed. ${item} is protected.`,\n\t\t\tdependencyError: (item: string) => `Deletion of ${item} failed. Dependency error occurred.`,\n\t\t\ttimeout: (item: string) => `Deletion of ${item} failed. Operation timed out.`\n\t\t}\n\t}\n};\n\nexport const zodMessages = {\n\terror: {\n\t\trequired: {\n\t\t\tfieldIsRequired: (field: string) => `${field} is required.`\n\t\t},\n\t\tlimit: {\n\t\t\tstringMin: (field: string, limit: number) => `${field} must be at least ${limit} characters.`,\n\t\t\tstringMax: (field: string, limit: number) => `${field} must not exceed ${limit} characters.`,\n\t\t\tarrayMin: (field: string, limit: number) => `${field} must have at least ${limit} items.`,\n\t\t\tarrayMax: (field: string, limit: number) => `${field} must not exceed ${limit} items.`,\n\t\t\tnumberMin: (field: string, limit: number) => `${field} must be at least ${limit}.`,\n\t\t\tnumberMax: (field: string, limit: number) => `${field} must not exceed ${limit}.`\n\t\t},\n\t\tinvalid: {\n\t\t\tinvalidString: (field: string) => `${field} must be a string.`,\n\t\t\tinvalidEmail: (field: string) => `${field} must be a valid email address.`,\n\t\t\tinvalidNumber: (field: string) => `${field} must be a number.`,\n\t\t\tinvalidBoolean: (field: string) => `${field} must be a boolean.`,\n\t\t\tinvalidDate: (field: string) => `${field} must be a date.`,\n\t\t\tinvalidArray: (field: string) => `${field} must be an array.`,\n\t\t\tinvalidObject: (field: string) => `${field} must be an object.`,\n\t\t\tinvalidEnum: (field: string, values: string[]) =>\n\t\t\t\t`${field} must be one of the following values: ${values.join(\", \")}.`,\n\t\t\tinvalidUnion: (field: string) => `${field} must be one of the specified types.`,\n\t\t\tinvalidIntersection: (field: string) =>\n\t\t\t\t`${field} must be a combination of the specified types.`,\n\t\t\tinvalidTuple: (field: string) => `${field} must be a tuple.`,\n\t\t\tinvalidRecord: (field: string) => `${field} must be a record.`,\n\t\t\tinvalidLiteral: (field: string, value: string) =>\n\t\t\t\t`${field} must be the literal value: ${value}.`,\n\t\t\tinvalidNull: (field: string) => `${field} must be null.`,\n\t\t\tinvalidUndefined: (field: string) => `${field} must be undefined.`,\n\t\t\tinvalidOptional: (field: string) => `${field} must be optional.`,\n\t\t\tinvalidNullable: (field: string) => `${field} must be nullable.`,\n\t\t\tinvalidPromise: (field: string) => `${field} must be a promise.`,\n\t\t\tinvalidFunction: (field: string) => `${field} must be a function.`,\n\t\t\tinvalidClass: (field: string) => `${field} must be a class.`,\n\t\t\tinvalidUnknown: (field: string) => `${field} must be unknown.`,\n\t\t\tinvalidNever: (field: string) => `${field} must be never.`,\n\t\t\tinvalidVoid: (field: string) => `${field} must be void.`,\n\t\t\tinvalidAny: (field: string) => `${field} must be any.`,\n\t\t\tinvalidUnknownKeys: (field: string) => `${field} must have unknown keys.`,\n\t\t\tinvalidFile: (field: string) => `${field} must be a file.`,\n\t\t\tinvalidFileSize: (field: string, limit: number) => `${field} must not exceed ${limit} bytes.`,\n\t\t\tinvalidFileType: (field: string, type: string) => `${field} must be of type ${type}.`,\n\t\t\tinvalidUpperCase: (field: string) => `${field} must be at least one upper case.`,\n\t\t\tinvalidLowerCase: (field: string) => `${field} must be at least one lower case.`,\n\t\t\tinvalidNumericCase: (field: string) => `${field} must be at least one number.`,\n\t\t\tinvalidUsername: (field: string) =>\n\t\t\t\t`${field} must contain only letters, numbers, and underscores.`,\n\t\t\tinvalidUsernameOrEmail: (field: string) =>\n\t\t\t\t`${field} must be a valid username or email address.`\n\t\t}\n\t}\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,eAAe;AAAA,EAC3B,SAAS;AAAA,IACR,cAAc;AAAA,IACd,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,qBAAqB;AAAA,IACrB,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,sBAAsB;AAAA,IACtB,uBAAuB;AAAA,IACvB,gBAAgB;AAAA,EACjB;AAAA,EACA,OAAO;AAAA,IACN,cAAc;AAAA,MACb,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,aAAa;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACN,oBAAoB;AAAA,MACpB,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,eAAe;AAAA,MACf,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,IACjB;AAAA,IACA,QAAQ;AAAA,MACP,aAAa;AAAA,MACb,aAAa;AAAA,IACd;AAAA,IACA,eAAe;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,aAAa;AAAA,IACd;AAAA,IACA,mBAAmB;AAAA,MAClB,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,aAAa;AAAA,IACd;AAAA,IACA,gBAAgB;AAAA,MACf,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,aAAa;AAAA,IACd;AAAA,IACA,cAAc;AAAA,MACb,cAAc;AAAA,MACd,aAAa;AAAA,IACd;AAAA,IACA,eAAe;AAAA,MACd,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,MACnB,yBAAyB;AAAA,MACzB,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,aAAa;AAAA,IACd;AAAA,EACD;AACD;AAEO,IAAM,eAAe;AAAA,EAC3B,SAAS;AAAA,IACR,QAAQ,CAAC,SAAiB,GAAG,IAAI;AAAA,IACjC,MAAM,CAAC,SAAiB,GAAG,IAAI;AAAA,IAC/B,QAAQ,CAAC,SAAiB,GAAG,IAAI;AAAA,IACjC,QAAQ,CAAC,SAAiB,GAAG,IAAI;AAAA,EAClC;AAAA,EACA,OAAO;AAAA,IACN,QAAQ;AAAA,MACP,iBAAiB,CAAC,SAAiB,eAAe,IAAI;AAAA,MACtD,eAAe,CAAC,SAAiB,eAAe,IAAI,YAAY,IAAI;AAAA,MACpE,eAAe,CAAC,SAAiB,eAAe,IAAI;AAAA,MACpD,aAAa,CAAC,SAAiB,eAAe,IAAI;AAAA,MAClD,gBAAgB,CAAC,SAAiB,eAAe,IAAI;AAAA,MACrD,aAAa,CAAC,SAAiB,eAAe,IAAI;AAAA,MAClD,eAAe,CAAC,SAAiB,eAAe,IAAI;AAAA,IACrD;AAAA,IACA,MAAM;AAAA,MACL,UAAU,CAAC,SAAiB,gBAAgB,IAAI,YAAY,IAAI;AAAA,MAChE,cAAc,CAAC,SACd,gBAAgB,IAAI;AAAA,MACrB,aAAa,CAAC,SAAiB,gBAAgB,IAAI;AAAA,MACnD,QAAQ,CAAC,SAAiB,gBAAgB,IAAI;AAAA,MAC9C,WAAW,CAAC,SAAiB,gBAAgB,IAAI;AAAA,MACjD,SAAS,CAAC,SAAiB,gBAAgB,IAAI;AAAA,IAChD;AAAA,IACA,QAAQ;AAAA,MACP,UAAU,CAAC,SAAiB,aAAa,IAAI,YAAY,IAAI;AAAA,MAC7D,iBAAiB,CAAC,SAAiB,aAAa,IAAI;AAAA,MACpD,eAAe,CAAC,SAAiB,aAAa,IAAI;AAAA,MAClD,aAAa,CAAC,SAAiB,aAAa,IAAI;AAAA,MAChD,UAAU,CAAC,SAAiB,aAAa,IAAI;AAAA,MAC7C,cAAc,CAAC,SAAiB,aAAa,IAAI;AAAA,MACjD,WAAW,CAAC,SAAiB,aAAa,IAAI;AAAA,MAC9C,QAAQ,CAAC,SAAiB,aAAa,IAAI;AAAA,IAC5C;AAAA,IACA,QAAQ;AAAA,MACP,UAAU,CAAC,SAAiB,eAAe,IAAI,YAAY,IAAI;AAAA,MAC/D,cAAc,CAAC,SACd,eAAe,IAAI;AAAA,MACpB,aAAa,CAAC,SAAiB,eAAe,IAAI;AAAA,MAClD,UAAU,CAAC,SAAiB,eAAe,IAAI;AAAA,MAC/C,WAAW,CAAC,SAAiB,eAAe,IAAI,YAAY,IAAI;AAAA,MAChE,iBAAiB,CAAC,SAAiB,eAAe,IAAI;AAAA,MACtD,SAAS,CAAC,SAAiB,eAAe,IAAI;AAAA,IAC/C;AAAA,EACD;AACD;AAEO,IAAM,cAAc;AAAA,EAC1B,OAAO;AAAA,IACN,UAAU;AAAA,MACT,iBAAiB,CAAC,UAAkB,GAAG,KAAK;AAAA,IAC7C;AAAA,IACA,OAAO;AAAA,MACN,WAAW,CAAC,OAAe,UAAkB,GAAG,KAAK,qBAAqB,KAAK;AAAA,MAC/E,WAAW,CAAC,OAAe,UAAkB,GAAG,KAAK,oBAAoB,KAAK;AAAA,MAC9E,UAAU,CAAC,OAAe,UAAkB,GAAG,KAAK,uBAAuB,KAAK;AAAA,MAChF,UAAU,CAAC,OAAe,UAAkB,GAAG,KAAK,oBAAoB,KAAK;AAAA,MAC7E,WAAW,CAAC,OAAe,UAAkB,GAAG,KAAK,qBAAqB,KAAK;AAAA,MAC/E,WAAW,CAAC,OAAe,UAAkB,GAAG,KAAK,oBAAoB,KAAK;AAAA,IAC/E;AAAA,IACA,SAAS;AAAA,MACR,eAAe,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC1C,cAAc,CAAC,UAAkB,GAAG,KAAK;AAAA,MACzC,eAAe,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC1C,gBAAgB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC3C,aAAa,CAAC,UAAkB,GAAG,KAAK;AAAA,MACxC,cAAc,CAAC,UAAkB,GAAG,KAAK;AAAA,MACzC,eAAe,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC1C,aAAa,CAAC,OAAe,WAC5B,GAAG,KAAK,yCAAyC,OAAO,KAAK,IAAI,CAAC;AAAA,MACnE,cAAc,CAAC,UAAkB,GAAG,KAAK;AAAA,MACzC,qBAAqB,CAAC,UACrB,GAAG,KAAK;AAAA,MACT,cAAc,CAAC,UAAkB,GAAG,KAAK;AAAA,MACzC,eAAe,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC1C,gBAAgB,CAAC,OAAe,UAC/B,GAAG,KAAK,+BAA+B,KAAK;AAAA,MAC7C,aAAa,CAAC,UAAkB,GAAG,KAAK;AAAA,MACxC,kBAAkB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC7C,iBAAiB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC5C,iBAAiB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC5C,gBAAgB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC3C,iBAAiB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC5C,cAAc,CAAC,UAAkB,GAAG,KAAK;AAAA,MACzC,gBAAgB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC3C,cAAc,CAAC,UAAkB,GAAG,KAAK;AAAA,MACzC,aAAa,CAAC,UAAkB,GAAG,KAAK;AAAA,MACxC,YAAY,CAAC,UAAkB,GAAG,KAAK;AAAA,MACvC,oBAAoB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC/C,aAAa,CAAC,UAAkB,GAAG,KAAK;AAAA,MACxC,iBAAiB,CAAC,OAAe,UAAkB,GAAG,KAAK,oBAAoB,KAAK;AAAA,MACpF,iBAAiB,CAAC,OAAe,SAAiB,GAAG,KAAK,oBAAoB,IAAI;AAAA,MAClF,kBAAkB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC7C,kBAAkB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC7C,oBAAoB,CAAC,UAAkB,GAAG,KAAK;AAAA,MAC/C,iBAAiB,CAAC,UACjB,GAAG,KAAK;AAAA,MACT,wBAAwB,CAAC,UACxB,GAAG,KAAK;AAAA,IACV;AAAA,EACD;AACD;","names":[]}