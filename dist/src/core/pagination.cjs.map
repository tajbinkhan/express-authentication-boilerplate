{"version":3,"sources":["../../../src/core/pagination.ts"],"sourcesContent":["import { Pagination } from \"@/utils/serviceApi\";\n\nexport default class PaginationManager {\n\tpage: number;\n\tlimit: number;\n\ttotalItems: number;\n\n\tconstructor(page: number, limit: number, totalItems: number) {\n\t\tthis.page = page;\n\t\tthis.limit = limit;\n\t\tthis.totalItems = totalItems;\n\t}\n\n\tpublic createPagination() {\n\t\tconst totalPages = Math.ceil(this.totalItems / this.limit);\n\n\t\tlet conditionalPage = this.page;\n\t\tif (this.page > totalPages && totalPages > 0) {\n\t\t\tconditionalPage = totalPages;\n\t\t}\n\n\t\tconst offset = (conditionalPage! - 1) * this.limit!;\n\n\t\tconst pagination: Pagination = {\n\t\t\ttotalItems: this.totalItems,\n\t\t\tlimit: this.limit,\n\t\t\toffset,\n\t\t\tcurrentPage: conditionalPage!,\n\t\t\ttotalPages,\n\t\t\thasPrevPage: conditionalPage! > 1,\n\t\t\thasNextPage: conditionalPage! < totalPages,\n\t\t\tprevPage: conditionalPage! > 1 ? conditionalPage! - 1 : null,\n\t\t\tnextPage: conditionalPage! < totalPages ? conditionalPage! + 1 : null\n\t\t};\n\n\t\treturn { pagination, offset };\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAqB,oBAArB,MAAuC;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,MAAc,OAAe,YAAoB;AAC5D,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,aAAa;AAAA,EACnB;AAAA,EAEO,mBAAmB;AACzB,UAAM,aAAa,KAAK,KAAK,KAAK,aAAa,KAAK,KAAK;AAEzD,QAAI,kBAAkB,KAAK;AAC3B,QAAI,KAAK,OAAO,cAAc,aAAa,GAAG;AAC7C,wBAAkB;AAAA,IACnB;AAEA,UAAM,UAAU,kBAAmB,KAAK,KAAK;AAE7C,UAAM,aAAyB;AAAA,MAC9B,YAAY,KAAK;AAAA,MACjB,OAAO,KAAK;AAAA,MACZ;AAAA,MACA,aAAa;AAAA,MACb;AAAA,MACA,aAAa,kBAAmB;AAAA,MAChC,aAAa,kBAAmB;AAAA,MAChC,UAAU,kBAAmB,IAAI,kBAAmB,IAAI;AAAA,MACxD,UAAU,kBAAmB,aAAa,kBAAmB,IAAI;AAAA,IAClE;AAEA,WAAO,EAAE,YAAY,OAAO;AAAA,EAC7B;AACD;","names":[]}