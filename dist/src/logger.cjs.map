{"version":3,"sources":["../../src/logger.ts"],"sourcesContent":["import { Express, NextFunction, Request, Response } from \"express\";\nimport pc from \"picocolors\";\n\nexport default function appLogger(app: Express) {\n\tapp.use((req: Request, res: Response, next: NextFunction) => {\n\t\tconst { method, url } = req;\n\t\tconst start = Date.now();\n\n\t\tconsole.log(`${pc.green(\"✓\")} ${method} ${url}`);\n\n\t\tres.on(\"finish\", () => {\n\t\t\tconst duration = Date.now() - start;\n\t\t\tconst statusCode = res.statusCode;\n\n\t\t\t// Color the status code based on its type\n\t\t\tlet coloredStatusCode;\n\t\t\tif (statusCode >= 500) coloredStatusCode = pc.red(statusCode.toString());\n\t\t\telse if (statusCode >= 400) coloredStatusCode = pc.yellow(statusCode.toString());\n\t\t\telse if (statusCode >= 300) coloredStatusCode = pc.cyan(statusCode.toString());\n\t\t\telse if (statusCode >= 200) coloredStatusCode = pc.green(statusCode.toString());\n\t\t\telse coloredStatusCode = pc.red(\"500\");\n\n\t\t\tconsole.log(`${pc.green(\"✓\")} ${method} ${url} ${coloredStatusCode} in ${duration}ms`);\n\t\t});\n\n\t\tnext();\n\t});\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAAe;AAEA,SAAR,UAA2B,KAAc;AAC/C,MAAI,IAAI,CAAC,KAAc,KAAe,SAAuB;AAC5D,UAAM,EAAE,QAAQ,IAAI,IAAI;AACxB,UAAM,QAAQ,KAAK,IAAI;AAEvB,YAAQ,IAAI,GAAG,kBAAAA,QAAG,MAAM,QAAG,CAAC,IAAI,MAAM,IAAI,GAAG,EAAE;AAE/C,QAAI,GAAG,UAAU,MAAM;AACtB,YAAM,WAAW,KAAK,IAAI,IAAI;AAC9B,YAAM,aAAa,IAAI;AAGvB,UAAI;AACJ,UAAI,cAAc,IAAK,qBAAoB,kBAAAA,QAAG,IAAI,WAAW,SAAS,CAAC;AAAA,eAC9D,cAAc,IAAK,qBAAoB,kBAAAA,QAAG,OAAO,WAAW,SAAS,CAAC;AAAA,eACtE,cAAc,IAAK,qBAAoB,kBAAAA,QAAG,KAAK,WAAW,SAAS,CAAC;AAAA,eACpE,cAAc,IAAK,qBAAoB,kBAAAA,QAAG,MAAM,WAAW,SAAS,CAAC;AAAA,UACzE,qBAAoB,kBAAAA,QAAG,IAAI,KAAK;AAErC,cAAQ,IAAI,GAAG,kBAAAA,QAAG,MAAM,QAAG,CAAC,IAAI,MAAM,IAAI,GAAG,IAAI,iBAAiB,OAAO,QAAQ,IAAI;AAAA,IACtF,CAAC;AAED,SAAK;AAAA,EACN,CAAC;AACF;","names":["pc"]}